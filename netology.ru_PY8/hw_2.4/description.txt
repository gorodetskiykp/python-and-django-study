https://netology-university.bitbucket.io/py/homework/2.4-paths/

Домашнее задание к лекции 2.4 «Работа с путями»

Задача №1

Нужные для работы файлы и заготовка кода находятся на GitHub.
https://github.com/netology-code/Python_course/tree/master/homework/2.3-paths

Представьте, что вам нужно отыскать файл в формате sql среди десятков других, при этом вы знаете некоторые части этого файла (на память или из другого источника).

    Программа ожидает строку, которую будет искать (input()).
    После того, как строка введена, программа ищет её во всех файлах, выводит имена найденных файлов построчно и выводит количество найденных файлов.
    Программа снова ожидает ввод, но теперь поиск происходит только среди отобранных на предыдущем этапе файлов.
    Программа снова ожидает ввод.
    ...

Выход из программы программировать не нужно. Достаточно принудительно ее останавливать, для этого можно нажать Ctrl + C. Для получения списка всех файлов используйте стандартные функции из os и os.path.

Пример на настоящих данных:

      python3 find_procedure.py
      Введите строку: INSERT
      ... большой список файлов ...
      Всего: 301
      Введите строку: APPLICATION_SETUP
      ... большой список файлов ...
      Всего: 26
      Введите строку: A400M
      ... большой список файлов ...
      Всего: 17
      Введите строку: 0.0
      Migrations/000_PSE_Application_setup.sql
      Migrations/100_1-32_PSE_Application_setup.sql
      Всего: 2
      Введите строку: 2.0
      Migrations/000_PSE_Application_setup.sql
      Всего: 1

Не забываем организовывать собственный код в функции.

Задача №2. Дополнительная (не обязательная)

Генерировать абсолютный путь до папки с миграциями. Скрипт при этом лежит в одной папке с папкой 'Migrations', но запускать мы его можем из любой директории - он будет работать корректно.

Практическая часть домашнего задания сдается ссылкой на репозиторий BitBucket или GitHub

Не сможем проверить или помочь, если вы пришлете:

    архивы;
    скриншоты кода;
    теоретический рассказ о возникших проблемах.

Дополнительные задания

Ответ преподавателя:
Здравствуйте, Константин!

Заметил, что ваша работа почти в точности совпадает с работой другого студента: https://github.com/AI1ce/homework2.4/blob/3492781efd363219c49827f83069609c09ecb968/Work_with_ways.py

Скорее всего, списали у вас, так как посылка отправлена позже вашей. Но для перестраховки я вынужден задать вам допзадание. Если вы сами сделали работу (я склоняюсь к этому варианту), то вам не составит труда его выполнить.

Сделайте поиск нечувствительным к регистру (“AbC” == “abc”) и сделайте так, чтобы поиск учитывал только буквы (“select * from ‘table’” == “selectfromtable”). Для простоты можете считать, что не учитывать нужно все пробелы (пробелы/табы/переносы строки), звездочку, запятую, точку, двоеточие.

А теперь по самой работе.

https://github.com/gorodetskiykp/python-and-django-study/blob/8b92c7c13676093bd016bfe68037c5dbbc67cd70/netology.ru_PY8/hw_2.4/find_procedure.py#L10 Нужно проверять не просто, что .sql содержится в названии, а что это именно расширение. Можете использовать функцию endswith или splitext

https://github.com/gorodetskiykp/python-and-django-study/blob/8b92c7c13676093bd016bfe68037c5dbbc67cd70/netology.ru_PY8/hw_2.4/find_procedure.py#L7 Кстати, комментарии к функции лучше писать в докстрингах. Посмотрите примеры: http://pyobject.ru/blog/2006/09/08/document-it/

В чем преимущества докстрингов перед обычными комментариями: различные парсеры Питона понимают этот формат и позволяют строить документацию автоматически. В итоге мы просто пишем код, потом запускаем генерацию документации - и получаем готовую документацию ко всем методам и классам. Это очень удобно!

https://github.com/gorodetskiykp/python-and-django-study/blob/8b92c7c13676093bd016bfe68037c5dbbc67cd70/netology.ru_PY8/hw_2.4/find_procedure.py#L14 "Можно передать абсолютный путь до файла" - но ведь не так. Мы можем передать абсолютный путь до директории, file_name все равно должен быть задан. При этом два параметра file_name и abs_path у вас обязательные, то есть мы не можем их не задать.

То есть пояснение к функции противоречит ей. В больших проектах неточная документация может принести много боли)

https://github.com/gorodetskiykp/python-and-django-study/blob/master/netology.ru_PY8/hw_2.4/.vimrc Ого, vim :) Круто

Если будут вопросы - задавайте!